name: Update Teaching Resources from Airtable

on:
  workflow_dispatch:
  schedule:
  - cron: '0 1-23/2 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repo
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - uses: actions/cache@v2
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install airtable-export
      run: |
        pip install airtable-export
    - name: Get YAML from Airtable to data/education/
      env:
        AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}
        AIRTABLE_KEY: ${{ secrets.AIRTABLE_KEY }}
        AIRTABLE_TABLES: ${{ secrets.AIRTABLE_TABLES }}
      run: |-
        airtable-export data/education $AIRTABLE_BASE_ID $AIRTABLE_TABLES -v
    - name: Install pyyaml, requests, shutil
      run: |-
        pip install pyyaml
        pip install requests
        pip install shutil
    - name: Download images to static/images/education-resources
      run: |-
        with open('Resources.yml', 'r') as file:
          ed_resources = yaml.safe_load(file)
        for i in ed_resources:
        filename = i["Image"][0]["filename"]
        file_url = i["Image"][0]["thumbnails"]["large"]["url"]
        img_data = requests.get(file_url).content
            # Open the url image, set stream to True, this will return the stream content.
        r = requests.get(file_url, stream = True)

        # Check if the image was retrieved successfully
        if r.status_code == 200:
            # Set decode_content value to True, otherwise the downloaded image file's size will be zero.
            r.raw.decode_content = True

            # Open a local file with wb ( write binary ) permission.
            with open("static/images/education-resources/"+filename,'wb') as f:
                shutil.copyfileobj(r.raw, f)

            print('Image sucessfully Downloaded: ',filename)
        else:
            print('Image Couldn\'t be retreived')
    - name: Commit and push if it changed
      run: |-
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        git add -A
        timestamp=$(date -u)
        git commit -m "Latest data: ${timestamp}" || exit 0
        git push
